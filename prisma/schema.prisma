// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Subject {
  id         String   @id @default(uuid()) @db.Uuid
  name       String @unique
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  lessons Lesson[]
}

model Lesson {
  id         String     @id @default(uuid()) @db.Uuid
  subject_id String     @db.Uuid
  topic      String @unique
  created_at DateTime   @default(now())
  updated_at DateTime   @updatedAt
  subject    Subject    @relation(fields: [subject_id], references: [id])
  practices  Practice[]
  homeworks  Homework[]

  lessonProgress LessonProgress[]
}

model Practice {
  id         String   @id @default(uuid()) @db.Uuid
  lesson_id  String   @db.Uuid
  name       String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  lesson        Lesson         @relation(fields: [lesson_id], references: [id])
  userPractices UserPractice[]

  @@index([lesson_id])
}

model Homework {
  id            String         @id @default(uuid()) @db.Uuid
  lesson_id     String         @db.Uuid
  name          String
  created_at    DateTime       @default(now())
  updated_at    DateTime       @updatedAt
  lesson        Lesson         @relation(fields: [lesson_id], references: [id])
  userHomeworks UserHomework[]

  @@index([lesson_id])
}

model User {
  id         String   @id @default(uuid()) @db.Uuid
  username   String   @db.VarChar(255)
  role       String   @db.VarChar(100)
  created_at    DateTime       @default(now())
  updated_at    DateTime       @updatedAt


  lessonProgress LessonProgress[]
  userHomeworks  UserHomework[]
  userPractices  UserPractice[]
}

model LessonProgress {
  user_id   String @db.Uuid
  lesson_id String @db.Uuid
  progress  String @db.VarChar(16)

  user   User   @relation(fields: [user_id], references: [id])
  lesson Lesson @relation(fields: [lesson_id], references: [id])
  created_at    DateTime       @default(now())
  updated_at    DateTime       @updatedAt

  @@id([user_id, lesson_id])
  @@index([lesson_id])
  @@index([user_id])
}

model UserHomework {
  user_id  String @db.Uuid
  task_id  String @db.Uuid
  solution String? @db.Text
  deadline DateTime
  score Int? @db.Integer

  user     User     @relation(fields: [user_id], references: [id])
  homework Homework @relation(fields: [task_id], references: [id])
  created_at    DateTime       @default(now())
  updated_at    DateTime       @updatedAt

  @@id([user_id, task_id])
  @@index([user_id])
  @@index([task_id])
}

model UserPractice {
  user_id  String @db.Uuid
  task_id  String @db.Uuid
  deadline DateTime
  solution String? @db.Text
  score Int? @db.Integer

  user     User     @relation(fields: [user_id], references: [id])
  practice Practice @relation(fields: [task_id], references: [id])
  created_at    DateTime       @default(now())
  updated_at    DateTime       @updatedAt

  @@id([user_id, task_id])
  @@index([user_id])
  @@index([task_id])
}

// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model subjects {
  id         String   @id @default(uuid()) @db.Uuid
  name       String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  lessons lessons[]

  @@map("subjects")
}

model lessons {
  id         String      @id @default(uuid()) @db.Uuid
  subject_id String      @db.Uuid
  topic      String
  created_at DateTime    @default(now())
  updated_at DateTime    @updatedAt
  subject    subjects    @relation(fields: [subject_id], references: [id])
  practices  practices[]
  homeworks  homeworks[]

  lessonProgress lesson_progress[]

  @@map("lessons")
}

model practices {
  id         String   @id @default(uuid()) @db.Uuid
  lesson_id  String   @db.Uuid
  name       String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  lesson lessons @relation(fields: [lesson_id], references: [id])

  @@index([lesson_id])
  @@map("practices")
}

model homeworks {
  id         String   @id @default(uuid()) @db.Uuid
  lesson_id  String   @db.Uuid
  name       String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  lesson lessons @relation(fields: [lesson_id], references: [id])

  userHomeworks users_homework[]
  solutions     solutions[]

  @@index([lesson_id])
  @@map("homeworks")
}

model users {
  id         String   @id @default(uuid()) @db.Uuid
  username   String   @db.VarChar(255)
  role       String   @db.VarChar(100)
  created_at DateTime @default(now())

  lessonProgress lesson_progress[]
  userHomeworks  users_homework[]
  solution       solutions[]

  @@map("users")
}

model lesson_progress {
  user_id   String @db.Uuid
  lesson_id String @db.Uuid
  progress  String @db.VarChar(16)

  user   users   @relation(fields: [user_id], references: [id])
  lesson lessons @relation(fields: [lesson_id], references: [id])

  @@id([user_id, lesson_id])
  @@index([lesson_id])
  @@index([user_id])
  @@map("lesson_progress")
}

model users_homework {
  user_id     String @db.Uuid
  homework_id String @db.Uuid
  deadline    String @db.VarChar(16)

  user     users     @relation(fields: [user_id], references: [id])
  homework homeworks @relation(fields: [homework_id], references: [id])

  @@id([user_id, homework_id])
  @@index([user_id])
  @@index([homework_id])
  @@map("user_homeworks")
}

model solutions {
  id          String    @id @default(uuid()) @db.Uuid
  owner_id    String    @db.Uuid()
  homework_id String    @db.Uuid
  homework    homeworks @relation(fields: [homework_id], references: [id])
  user        users     @relation(fields: [owner_id], references: [id])
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt

  @@index([homework_id])
  @@map("solutions")
}
